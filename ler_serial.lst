;  LST file generated by mikroListExporter - v.2.0 
; Date/Time: 15/04/2020 19:57:58
;----------------------------------------------

;Address Opcode 	ASM
0x0000	0x2829      	GOTO       41
_UART1_Init:
;__Lib_UART_b75.mpas,32 :: 		
;__Lib_UART_b75.mpas,33 :: 		
0x0003	0x1683      	BSF        STATUS, 5
0x0004	0x1303      	BCF        STATUS, 6
0x0005	0x1698      	BSF        TXSTA, 5
;__Lib_UART_b75.mpas,34 :: 		
0x0006	0x3090      	MOVLW      144
0x0007	0x1283      	BCF        STATUS, 5
0x0008	0x0098      	MOVWF      RCSTA
;__Lib_UART_b75.mpas,35 :: 		
0x0009	0x1683      	BSF        STATUS, 5
0x000A	0x1686      	BSF        TRISB5_bit, BitPos(TRISB5_bit+0)
;__Lib_UART_b75.mpas,36 :: 		
0x000B	0x1386      	BCF        TRISB7_bit, BitPos(TRISB7_bit+0)
;__Lib_UART_b75.mpas,37 :: 		
L__UART1_Init2:
0x000C	0x1283      	BCF        STATUS, 5
0x000D	0x1E8C      	BTFSS      PIR1, 5
0x000E	0x2812      	GOTO       L__UART1_Init3
;__Lib_UART_b75.mpas,38 :: 		
0x000F	0x081A      	MOVF       RCREG, 0
0x0010	0x00F0      	MOVWF      R0
0x0011	0x280C      	GOTO       L__UART1_Init2
L__UART1_Init3:
;__Lib_UART_b75.mpas,39 :: 		
L_end_UART1_Init:
0x0012	0x0008      	RETURN
; end of _UART1_Init
_UART1_Read:
;__Lib_UART_b75.mpas,50 :: 		
;__Lib_UART_b75.mpas,51 :: 		
0x0013	0x1283      	BCF        STATUS, 5
0x0014	0x1303      	BCF        STATUS, 6
0x0015	0x081A      	MOVF       RCREG, 0
0x0016	0x00F2      	MOVWF      R2
;__Lib_UART_b75.mpas,52 :: 		
0x0017	0x1C98      	BTFSS      RCSTA, 1
0x0018	0x281B      	GOTO       L__UART1_Read9
;__Lib_UART_b75.mpas,54 :: 		
0x0019	0x1218      	BCF        RCSTA, 4
;__Lib_UART_b75.mpas,55 :: 		
0x001A	0x1618      	BSF        RCSTA, 4
;__Lib_UART_b75.mpas,56 :: 		
L__UART1_Read9:
;__Lib_UART_b75.mpas,57 :: 		
0x001B	0x0872      	MOVF       R2, 0
0x001C	0x00F1      	MOVWF      R1
;__Lib_UART_b75.mpas,58 :: 		
0x001D	0x0871      	MOVF       R1, 0
0x001E	0x00F0      	MOVWF      R0
L_end_UART1_Read:
0x001F	0x0008      	RETURN
; end of _UART1_Read
_UART1_Data_Ready:
;__Lib_UART_b75.mpas,43 :: 		
;__Lib_UART_b75.mpas,44 :: 		
0x0020	0x3000      	MOVLW      0
0x0021	0x1283      	BCF        STATUS, 5
0x0022	0x1303      	BCF        STATUS, 6
0x0023	0x1A8C      	BTFSC      PIR1, 5
0x0024	0x3001      	MOVLW      1
0x0025	0x00F1      	MOVWF      R1
;__Lib_UART_b75.mpas,45 :: 		
0x0026	0x0871      	MOVF       R1, 0
0x0027	0x00F0      	MOVWF      R0
L_end_UART1_Data_Ready:
0x0028	0x0008      	RETURN
; end of _UART1_Data_Ready
_main:
;ler_serial.mbas,5 :: 		MAIN:
;ler_serial.mbas,7 :: 		TRISA = %00000000
0x0029	0x1683      	BSF        STATUS, 5
0x002A	0x1303      	BCF        STATUS, 6
0x002B	0x0185      	CLRF       TRISA
;ler_serial.mbas,8 :: 		TRISB = %00000000
0x002C	0x0186      	CLRF       TRISB
;ler_serial.mbas,9 :: 		TRISC = %00000000
0x002D	0x0187      	CLRF       TRISC
;ler_serial.mbas,11 :: 		porta = 0
0x002E	0x1283      	BCF        STATUS, 5
0x002F	0x0185      	CLRF       PORTA
;ler_serial.mbas,12 :: 		portb = 0
0x0030	0x0186      	CLRF       PORTB
;ler_serial.mbas,13 :: 		portc = 0
0x0031	0x0187      	CLRF       PORTC
;ler_serial.mbas,15 :: 		UART1_Init(9600)
0x0032	0x3019      	MOVLW      25
0x0033	0x1683      	BSF        STATUS, 5
0x0034	0x0099      	MOVWF      SPBRG
0x0035	0x1518      	BSF        TXSTA, 2
0x0036	0x2003      	CALL       _UART1_Init
;ler_serial.mbas,16 :: 		Delay_ms(100)
0x0037	0x3082      	MOVLW      130
0x0038	0x00FC      	MOVWF      R12
0x0039	0x30DD      	MOVLW      221
0x003A	0x00FD      	MOVWF      R13
L__main1:
0x003B	0x0BFD      	DECFSZ     R13, 1
0x003C	0x283B      	GOTO       L__main1
0x003D	0x0BFC      	DECFSZ     R12, 1
0x003E	0x283B      	GOTO       L__main1
0x003F	0x0000      	NOP
0x0040	0x0000      	NOP
;ler_serial.mbas,18 :: 		WHILE true
L__main3:
;ler_serial.mbas,20 :: 		if (UART1_Data_Ready() = 1) then
0x0041	0x2020      	CALL       _UART1_Data_Ready
0x0042	0x0870      	MOVF       R0, 0
0x0043	0x3A01      	XORLW      1
0x0044	0x1D03      	BTFSS      STATUS, 2
0x0045	0x285F      	GOTO       L__main8
;ler_serial.mbas,21 :: 		TRISC = %00000000
0x0046	0x1683      	BSF        STATUS, 5
0x0047	0x0187      	CLRF       TRISC
;ler_serial.mbas,22 :: 		recebido = UART1_Read()
0x0048	0x2013      	CALL       _UART1_Read
0x0049	0x0870      	MOVF       R0, 0
0x004A	0x00A0      	MOVWF      _recebido
;ler_serial.mbas,25 :: 		if(recebido = "a") then
0x004B	0x0870      	MOVF       R0, 0
0x004C	0x3A61      	XORLW      97
0x004D	0x1D03      	BTFSS      STATUS, 2
0x004E	0x2850      	GOTO       L__main11
;ler_serial.mbas,26 :: 		setbit(portc, 0)
0x004F	0x1407      	BSF        PORTC, 0
L__main11:
;ler_serial.mbas,30 :: 		if(recebido = "b") then
0x0050	0x0820      	MOVF       _recebido, 0
0x0051	0x3A62      	XORLW      98
0x0052	0x1D03      	BTFSS      STATUS, 2
0x0053	0x2855      	GOTO       L__main14
;ler_serial.mbas,31 :: 		clearbit(portc, 0)
0x0054	0x1007      	BCF        PORTC, 0
L__main14:
;ler_serial.mbas,35 :: 		if(recebido = "c") then
0x0055	0x0820      	MOVF       _recebido, 0
0x0056	0x3A63      	XORLW      99
0x0057	0x1D03      	BTFSS      STATUS, 2
0x0058	0x285A      	GOTO       L__main17
;ler_serial.mbas,36 :: 		setbit(portc, 1)
0x0059	0x1487      	BSF        PORTC, 1
L__main17:
;ler_serial.mbas,40 :: 		if(recebido = "d") then
0x005A	0x0820      	MOVF       _recebido, 0
0x005B	0x3A64      	XORLW      100
0x005C	0x1D03      	BTFSS      STATUS, 2
0x005D	0x285F      	GOTO       L__main20
;ler_serial.mbas,41 :: 		clearbit(portc, 1)
0x005E	0x1087      	BCF        PORTC, 1
L__main20:
;ler_serial.mbas,42 :: 		end if
L__main8:
;ler_serial.mbas,45 :: 		WEND
0x005F	0x2841      	GOTO       L__main3
L_end_main:
0x0060	0x2860      	GOTO       $+0
; end of _main
Symbol List:
//** Routines locations **
//ADDRESS    SIZE    PROCEDURE
//----------------------------------------------
0x0003      [16]    _UART1_Init
0x0013      [13]    _UART1_Read
0x0020       [9]    _UART1_Data_Ready
0x0029      [56]    _main
//** Variables locations ** 
//ADDRESS    SIZE    VARIABLE
//----------------------------------------------
0x0005       [1]    PORTA
0x0006       [1]    PORTB
0x0007       [1]    PORTC
0x000C       [1]    PIR1
0x0018       [1]    RCSTA
0x001A       [1]    RCREG
0x0020       [1]    _recebido
0x0070       [1]    R0
0x0071       [1]    R1
0x0072       [1]    R2
0x0073       [1]    R3
0x0074       [1]    R4
0x0075       [1]    R5
0x0076       [1]    R6
0x0077       [1]    R7
0x0078       [1]    R8
0x0079       [1]    R9
0x007A       [1]    R10
0x007B       [1]    R11
0x007C       [1]    R12
0x007D       [1]    R13
0x007E       [1]    R14
0x007F       [1]    R15
0x0085       [1]    TRISA
0x0086       [1]    TRISB
0x0086       [0]    TRISB5_bit
0x0086       [0]    TRISB7_bit
0x0087       [1]    TRISC
0x0098       [1]    TXSTA
0x0099       [1]    SPBRG
0x009A       [1]    SPBRGH
